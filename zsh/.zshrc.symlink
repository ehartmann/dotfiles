# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
#ZSH_THEME="eric"
POWERLEVEL9K_MODE='nerdfont-complete'
#POWERLEVEL9K_MODE='awesome-fontconfig'
#POWERLEVEL9K_MODE='awesome-patched'

POWERLEVEL9K_PROMPT_ADD_NEWLINE=true
POWERLEVEL9K_SHOW_CHANGESET=true
POWERLEVEL9K_BATTERY_VERBOSE=false
POWERLEVEL9K_SHORTEN_DIR_LENGTH=2

POWERLEVEL9K_RBENV_BACKGROUND="235"
POWERLEVEL9K_RBENV_FOREGROUND="246"

POWERLEVEL9K_JAVA_BACKGROUND="235"
POWERLEVEL9K_JAVA_FOREGROUND="246"

POWERLEVEL9K_NODE_VERSION_BACKGROUND="235"
POWERLEVEL9K_NODE_VERSION_FOREGROUND="246"

POWERLEVEL9K_IP_BACKGROUND="237"
POWERLEVEL9K_IP_FOREGROUND="246"
POWERLEVEL9K_PUBLIC_IP_BACKGROUND="237"
POWERLEVEL9K_PUBLIC_IP_FOREGROUND="246"

POWERLEVEL9K_DIR_HOME_BACKGROUND="240"
POWERLEVEL9K_DIR_HOME_FOREGROUND="250"
POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND="240"
POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND="249"
POWERLEVEL9K_DIR_DEFAULT_BACKGROUND="240"
POWERLEVEL9K_DIR_DEFAULT_FOREGROUND="249"

POWERLEVEL9K_STATUS_OK_BACKGROUND="240"
POWERLEVEL9K_STATUS_OK_FOREGROUND="green"
POWERLEVEL9K_STATUS_ERROR_BACKGROUND="240"
POWERLEVEL9K_STATUS_ERROR_FOREGROUND="red"

POWERLEVEL9K_CONTEXT_DEFAULT_BACKGROUND="240"
POWERLEVEL9K_CONTEXT_DEFAULT_FOREGROUND="185"

POWERLEVEL9K_CONTEXT_ROOT_BACKGROUND="160"
POWERLEVEL9K_CONTEXT_ROOT_FOREGROUND="15"

POWERLEVEL9K_SSH_BACKGROUND="240"
POWERLEVEL9K_SSH_FOREGROUND="228"

POWERLEVEL9K_VCS_CLEAN_BACKGROUND='150'
POWERLEVEL9K_VCS_CLEAN_FOREGROUND='236'
POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND='178'
POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND='236'
POWERLEVEL9K_VCS_MODIFIED_BACKGROUND='088'
POWERLEVEL9K_VCS_MODIFIED_FOREGROUND='250'

POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(ssh context_joined java rbenv_joined node_version_joined vcs newline dir_writable dir_joined)
#POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(ssh context_joined vcs ip public_ip_joined java rbenv_joined node_version_joined newline dir dir_writable_joined)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator command_execution_time background_jobs battery time)
ZSH_THEME="powerlevel9k/powerlevel9k"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias pssh="parallel-ssh -i -O StrictHostKeyChecking=no -O UserKnownHostsFile=/dev/null -O GlobalKnownHostsFile=/dev/null"
# zshmarks
alias g="jump"
alias s="bookmark"
alias d="deletemark"
alias p="showmarks"
alias l="showmarks"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Uncomment this to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
DISABLE_CORRECTION="false"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment following line if you want to  shown in the command execution time stamp 
# in the history command output. The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|
# yyyy-mm-dd
# HIST_STAMPS="mm/dd/yyyy"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git ant command-not-found docker-compose docker git-extras git-flow gitignore git-prompt hub history mercurial mvn node npm rails rake ruby rsync sublime sudo vagrant brew brew-cask bower golang go jira atom jira tmux kitchen terminitor screen osx completions packer ansible ansible-galaxy ansible-playbook ansible-vault debuild example jq openssl packer ssh-copy-id virtualbox fasd gradle httpie jira tig tmux systemd screen zsh-autosuggestions zsh-highlighting zshmarks)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# # Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

autoload -Uz vcs_info
zstyle ':vcs_info:*' enable hg git bzr svn
zstyle ':vcs_info:hg*:*' check-for-changes true
#zstyle ':vcs_info:hg*:netbeans' use-simple true
#zstyle ':vcs_info:hg*' actionformats "(%s|%a)[%i%u %b %m]"

if [ -r ~/.profile ]; then . ~/.profile; fi

platform=`uname`

export ANSIBLE_NOCOWS=1
#export ANT_HOME=/opt/eric/apache-ant-1.9.4/
export ANT_OPTS="-Xmx784M -Xms128M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=128m"
#export MAVEN_HOME=/opt/eric/apache-maven-3.5.2/
#export MAVEN_OPTS="-Xmx784M -Xms128M"
#export MAVEN_DEBUG_OPTS="-Xmx784M -Xms128M -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=8000"
export NODE_PATH=$NODE_PATH:/opt/npm/lib/node_modules
export Ã¹=$HOME/Projects
export GOPATH=$HOME/go
export PATH=$HOME/.rbenv/bin:/opt/npm/bin:$HOME/bin/:$HOME/.local/bin:$JAVA_HOME/bin:$MAVEN_HOME/bin:$ANT_HOME/bin:/usr/local/heroku/bin:/usr/local/bin:$PATH:/usr/local/heroku/bin:/usr/local/bin:/opt/groovy/bin:$GOPATH/bin:/opt/eric/sonar-scanner/bin/:$PATH

if [[ "$platform" == "Darwin" ]]; then
    export JAVA_HOME=`/usr/libexec/java_home -v 1.8`
    export PATH=$HOME/bin/mac:/usr/local/sbin:$PATH
else
    export PATH=$HOME/bin/linux:$PATH
fi

# Alias
ap_pass() {
  ansible-playbook ${@:2} --vault-password-file ~/.$1_pass
}

av_pass() {
  ansible-vault ${@:2} --vault-password-file ~/.$1_pass
}

ap() {
  ansible-playbook $@
}

av() {
  ansible-vault $@
}

compdef ap='ansible-playbook'
compdef av='ansible-vault'

# Store credentials there
[[ -a "$HOME/.zshrc_extra" ]] && source "$HOME/.zshrc_extra"

source "$HOME/.sdkman/bin/sdkman-init.sh"

if [ $TERMINIX_ID ] || [ $VTE_VERSION ]; then
  source /etc/profile.d/vte.sh
fi

eval "$(rbenv init -)"

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/${HOME}/.sdkman"
[[ -s "${HOME}/.sdkman/bin/sdkman-init.sh" ]] && source "${HOME}/.sdkman/bin/sdkman-init.sh"

# The next line updates PATH for the Google Cloud SDK.
source "${HOME}/google-cloud-sdk/path.zsh.inc"

# The next line enables shell command completion for gcloud.
source "${HOME}/google-cloud-sdk/completion.zsh.inc"

